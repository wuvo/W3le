#include "crypt.h"
#include <vcruntime_string.h>


char key[1024] = { -25, 95, -11, 102, 112, -112, -69, -101, -4, -77, 120, -6, 15, 42, -38, -60, 114, -75,
-82, 94, 21, -116, -17, -119, 37, 3, -125, 101, -60, -17, -56, 68, 58, -36, -89, -71, 49, -80, -26, -58,
-23, -35, -21, -104, 48, -65, -108, 98, 11, -123, 76, 90, -99, 78, 105, -37, -16, -19, -62, -18, -114, -43,
85, -114, 105, -75, 62, -76, 4, -95, 18, 67, 77, 103, -10, -71, 32, -41, -40, -26, -17, -97, -37, -64, 33, -20,
39, 107, -15, 74, 72, -59, 108, 119, -72, -107, 7, -34, -82, -5, -1, 95, -33, -22, -14, -119, -114, -75, -39, 49,
58, -103, -106, 90, 125, 110, 120, 21, -21, -3, 12, 82, 66, 56, -40, -50, 85, 85, 47, -31, 49, -61, -86, 91, 101,
15, 62, 112, 77, 25, -33, -13, 19, 63, -111, 47, -81, -109, 121, -55, -100, 112, 114, 47, 109, 44, -98, 37, -110,
-92, -77, -72, 4, 118, 126, -8, 110, -71, 116, -18, -80, -119, 71, 81, -97, -102, -65, -124, 40, 39, -97, 67, 90,
-25, -58, 64, -48, -7, 109, -71, -14, -102, 94, 41, -26, -88, 110, 27, 63, 24, 64, 117, -98, 12, -103, -108, -87, -95,
17, 84, -18, -101, 123, -23, -122, -17, -36, -99, 49, -65, -88, -11, -53, 59, 122, -105, -87, -97, -21, 118, -86, 35,
-61, -111, 102, -88, 37, -49, -50, -77, 23, -81, 103, -103, 74, -40, -99, -11, 35, 118, 74, 81, 105, 0, -16, -53, 43, -31,
16, -125, 105, -117, 53, 26, 42, 73, 86, 107, 2, 92, 72, -114, 77, -2, 38, 120, 13, -78, 111, 34, 121, 51, -6, -12, -84, -41,
56, 66, 32, 28, -4, -59, 61, -52, -56, 13, -7, -50, -18, -127, 1, -79, 114, 69, -82, 60, -123, -21, 88, -10, 61, -6, -16, 108,
-119, -73, 15, -63, -18, -45, -110, -107, -53, 100, -31, 4, -49, 2, -73, -102, 0, -64, 66, 111, -94, 72, 63, 51, -58, -18, -45,
-51, 104, -86, 94, -125, 83, 80, -61, -110, 124, -72, 94, -101, 110, -19, 100, -114, -27, 41, -18, 1, -75, 62, 117, -3, 54,
0, 75, -65, -10, 91, 121, 126, -127, 67, -85, -95, -121, -33, 47, -2, -65, -90, -99, -55, -32, 40, -126, 52, 99, 50, -49, 28,
-127, 81, -103, -86, -76, -31, -52, -44, -122, -123, 26, -95, -67, 95, -101, -85, -62, 67, -121, -121, 121, 110, -62, -112,
34, 45, -98, -114, -1, -105, -37, 67, 13, -34, 126, -82, 43, -126, 108, 37, -108, -36, -7, -69, 10, 122, -116, -1, 14, 85, -13,
-96, 43, -55, 34, -111, 15, -119, 6, 6, -61, -66, 83, 109, 40, 85, 19, 93, 96, 107, -1, -64, 86, -31, 113, 29, -10, -120, 4, 39,
33, 29, -1, 40, 34, -68, -103, -60, 59, 109, 30, 34, -6, -25, -30, 84, 7, 10, 18, 52, -25, -83, 30, 33, -41, -77, -56, -53, -42,
-123, 26, 8, 4, 94, 99, 37, 61, -84, -53, -20, 61, -48, -93, 114, -50, 91, 68, -16, 125, -98, -105, 106, -11, 79, -64, -11, 125, 93,
-46, -17, 114, 76, 109, 55, -45, -106, -97, 27, 2, 60, -105, -36, -64, -90, 117, -104, -117, 43, -45, -6, -18, 87, -52, -71, 108, 46,
-109, 51, 31, -17, 38, 95, 89, 90, -8, 111, -31, -22, 31, -72, 61, -86, 108, -63, -121, 58, 43, -48, 89, -87, -22, -45, 10, 87, -126,
-100, 1, 53, 73, 36, -124, -22, 123, -108, -105, -73, 1, -28, 44, -121, 54, 31, -115, -100, 59, -60, 105, -117, -78, -77, -124, 66, 89,
-10, -123, -45, -42, -125, 89, -35, -17, 42, 32, 121, -75, -44, -82, 89, -85, 78, -71, -56, 35, 82, -15, 73, -58, -18, -100, 60, -78, -10,
3, 23, 33, -64, 16, 5, -113, 66, 95, -1, 10, -48, 22, -116, 126, -110, 101, -24, -105, -112, 95, -30, 121, 58, -96, -121, -123, -70, -114,
102, 101, -99, -85, 119, -89, -118, -39, 116, 66, 39, 75, -24, 109, 56, 61, -44, -67, -26, 74, -76, 7, 51, 38, -93, 22, -94, 28, 101, -96,
9, 0, 83, 53, 120, 25, -19, -91, 30, 100, 117, 56, 112, 36, -18, -60, -9, -13, -63, 124, 75, 73, 30, -17, 88, -33, -77, -10, -120, -30, -122,
-20, -14, 84, -70, -88, 118, 50, 116, -96, -48, -81, 30, 1, 83, -5, 22, -113, -72, 94, -97, 45, -37, 104, -44, 63, 96, -27, 91, 26, -26, 118,
-98, -67, 94, 10, -58, -99, -21, -57, -52, 68, -2, -94, 45, 29, -84, -98, 27, -35, 72, -91, -66, -87, -61, -40, -111, 9, 1, -7, -57, 18, 85,
-37, 56, -40, -110, -30, 33, -54, -74, -6, 35, 112, 18, -38, -81, -70, -69, 54, 20, 67, 72, -2, 80, -62, 56, 115, 120, 7, -6, 59, 26, 112, 126,
57, 109, -92, -23, -43, 12, 73, -5, -46, -88, -50, 0, -51, 21, 103, -87, 86, -50, 74, 100, 3, 72, -40, 9, -10, 31, -99, -24, -101, 79, -7, 94,
49, 112, 87, -21, -116, 79, 101, -86, 74, -56, -9, -42, 2, 64, -21, -34, -110, -34, 34, -19, 79, -115, -4, 112, 22, 25, 114, 53, -16, -30, -31,
2, 46, -17, 78, -36, 61, -3, -98, -121, -24, 32, -101, -69, -47, -126, -121, 52, -76, 61, -41, 60, -83, -115, -112, 37, -12, 101, 84, -14, 92,
-79, 57, -23, 102, 116, 39, -108, 113, -112, 32, 19, -63, 28, -122, -80, 112, -62, 32, 21, 18, -66, 1, 50, -116, 36, -43, 33, -32, -87, 102, 87,
40, 43, -86, -73, 101, 49, -44, -37, -39, 114, 66, -92, -99, 66, -5, 16, -121, 94, 51, -77, -59, -65, 94, 30, 46, -120, -34, -62, 32, -122, 51, 72,
-87, 72, 106, 21, -14, 77, -55, -64, 108, -58, -67, 31, -5, -34, 21, -55, -87, 68, 27, 0, -11, 51, 18, -23, 75, 10, 7, 93, -44, -110, 58, -45, -65,
120, 122, -44, 86, 101, };

char* crypt::Decode(char* buffer, int size)
{
	char* buff2 = new char[size + 1];
	buff2[size] = 0;
	memcpy(buff2, buffer, size);
	for (int j = 0; j < size; j++)
	{
		buff2[j] ^= key[j % sizeof key];
		buff2[j] ^= 0x1f;
	}
	return buff2; // caller must free
}

void crypt::StaticDecode(char* buffer, int size)
{
	for (int j = 0; j < size; j++)
	{
		buffer[j] ^= key[j % sizeof key];
		buffer[j] ^= 0x1f;
	}
}

